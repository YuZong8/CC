/**
 * Implement an algorithm to determine if a string has all unique characters. 
 * What if you cannot use additional data structures?
 * 
 * idea: 
 * Assume all the input are ASCII, we can use a Boolean[] to check whether the characters in the string is duplicated. 
 * First, you can ask the interviewer whether the ASCII are 128 or extended 256, 
 * then initialize a Boolean[] such as check[256], 
 * initialize each elements in the array to be false. 
 * After that, traverse all the elements, if the checkBoolean[i] == true, which means the element has been duplicated. 
 * Output False to the console and exit. Otherwise, mark the check[i] to be true, and check the next element.
 *
 */

class EXE1_1{  
public static boolean isUniqueChar(String str) {
	boolean[] check = new boolean[256];

	for(int i = 0; i < str.length(); i ++) {
		int val = str.charAt(i);

 		if(check[val])	return false;
		
		check[val] = true;
	
	return true;
} 
 
 
  public static void main(String[] args){  
    String str = "abc@#$123,./";  
    System.out.println(isUniqueChar(str));  
  }  
}  
